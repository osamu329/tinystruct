// Code generated by "stringer -type Token"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[EOF-1]
	_ = x[IDENT-2]
	_ = x[STRUCT-3]
	_ = x[TYPEDEF-4]
	_ = x[COMMENT-5]
	_ = x[LBRACE-6]
	_ = x[RBRACE-7]
	_ = x[LBRACK-8]
	_ = x[RBRACK-9]
	_ = x[RUNE-10]
	_ = x[INT-11]
	_ = x[LF-12]
	_ = x[SEMICOLON-13]
}

const _Token_name = "INVALIDEOFIDENTSTRUCTTYPEDEFCOMMENTLBRACERBRACELBRACKRBRACKRUNEINTLFSEMICOLON"

var _Token_index = [...]uint8{0, 7, 10, 15, 21, 28, 35, 41, 47, 53, 59, 63, 66, 68, 77}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
